### BATERIA a1-b2-c0-d0-e1-f0
## #1 g0 n50

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
|=> Tempo total = 20
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000103s

## #1 g0 n100

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
|=> Tempo total = 27
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000112s

## #1 g0 n200

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
|=> Tempo total = 35
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000119s

## #1 g0 n400

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
|=> Tempo total = 44
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000105s

## #1 g0 n800

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 54
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 9e-05s

## #1 g0 n1000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 54
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000101s

## #1 g0 n2000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
Nivel 10 = 11
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
|=> Tempo total = 65
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000101s

## #1 g0 n4000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
Nivel 10 = 11
Nivel 11 = 12
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
|=> Tempo total = 77
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 9.9e-05s

## #1 g0 n8000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
Nivel 10 = 11
Nivel 11 = 12
Nivel 12 = 13
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
|=> Tempo total = 90
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000105s

## #1 g0 n16000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
Nivel 10 = 11
Nivel 11 = 12
Nivel 12 = 13
Nivel 13 = 14
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
|=> Tempo total = 104
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000129s

## #1 g0 n32000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
Nivel 10 = 11
Nivel 11 = 12
Nivel 12 = 13
Nivel 13 = 14
Nivel 14 = 15
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
|=> Tempo total = 119
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.00012s

## #1 g0 n64000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
Nivel 10 = 11
Nivel 11 = 12
Nivel 12 = 13
Nivel 13 = 14
Nivel 14 = 15
Nivel 15 = 16
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
|=> Tempo total = 135
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000148s

## #1 g0 n128000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 3
Nivel 3 = 4
Nivel 4 = 5
Nivel 5 = 6
Nivel 6 = 7
Nivel 7 = 8
Nivel 8 = 9
Nivel 9 = 10
Nivel 10 = 11
Nivel 11 = 12
Nivel 12 = 13
Nivel 13 = 14
Nivel 14 = 15
Nivel 15 = 16
Nivel 16 = 17
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
Nivel 16 = 1
|=> Tempo total = 152
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
Nivel 16 = 1

Metodo Mestre
T(n) = 1T( (n/2) + n^0
b = 2, a = 1, f(n) = n^0
log de 1 na base 2 = 0
Caso 2 Método Mestre
T(n) = Teta(n^0lgn)

Tempo Execução = 0.000144s

## #1 g1 n50

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 51
Nivel 2 = 27
Nivel 3 = 15
Nivel 4 = 10
Nivel 5 = 8
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
|=> Tempo total = 111
|=> Trabalho de fn por nivel
Nivel 1 = 50
Nivel 2 = 25
Nivel 3 = 12
Nivel 4 = 6
Nivel 5 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000133s

## #1 g1 n100

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 101
Nivel 2 = 52
Nivel 3 = 28
Nivel 4 = 16
Nivel 5 = 11
Nivel 6 = 9
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
|=> Tempo total = 217
|=> Trabalho de fn por nivel
Nivel 1 = 100
Nivel 2 = 50
Nivel 3 = 25
Nivel 4 = 12
Nivel 5 = 6
Nivel 6 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000101s

## #1 g1 n200

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 201
Nivel 2 = 102
Nivel 3 = 53
Nivel 4 = 29
Nivel 5 = 17
Nivel 6 = 12
Nivel 7 = 10
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
|=> Tempo total = 424
|=> Trabalho de fn por nivel
Nivel 1 = 200
Nivel 2 = 100
Nivel 3 = 50
Nivel 4 = 25
Nivel 5 = 12
Nivel 6 = 6
Nivel 7 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000103s

## #1 g1 n400

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 401
Nivel 2 = 202
Nivel 3 = 103
Nivel 4 = 54
Nivel 5 = 30
Nivel 6 = 18
Nivel 7 = 13
Nivel 8 = 11
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
|=> Tempo total = 832
|=> Trabalho de fn por nivel
Nivel 1 = 400
Nivel 2 = 200
Nivel 3 = 100
Nivel 4 = 50
Nivel 5 = 25
Nivel 6 = 12
Nivel 7 = 6
Nivel 8 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000115s

## #1 g1 n800

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 801
Nivel 2 = 402
Nivel 3 = 203
Nivel 4 = 104
Nivel 5 = 55
Nivel 6 = 31
Nivel 7 = 19
Nivel 8 = 14
Nivel 9 = 12
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 1641
|=> Trabalho de fn por nivel
Nivel 1 = 800
Nivel 2 = 400
Nivel 3 = 200
Nivel 4 = 100
Nivel 5 = 50
Nivel 6 = 25
Nivel 7 = 12
Nivel 8 = 6
Nivel 9 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000453s

## #1 g1 n1000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1001
Nivel 2 = 502
Nivel 3 = 253
Nivel 4 = 129
Nivel 5 = 67
Nivel 6 = 37
Nivel 7 = 22
Nivel 8 = 15
Nivel 9 = 12
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 2038
|=> Trabalho de fn por nivel
Nivel 1 = 1000
Nivel 2 = 500
Nivel 3 = 250
Nivel 4 = 125
Nivel 5 = 62
Nivel 6 = 31
Nivel 7 = 15
Nivel 8 = 7
Nivel 9 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000137s

## #1 g1 n2000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 2001
Nivel 2 = 1002
Nivel 3 = 503
Nivel 4 = 254
Nivel 5 = 130
Nivel 6 = 68
Nivel 7 = 38
Nivel 8 = 23
Nivel 9 = 16
Nivel 10 = 13
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
|=> Tempo total = 4048
|=> Trabalho de fn por nivel
Nivel 1 = 2000
Nivel 2 = 1000
Nivel 3 = 500
Nivel 4 = 250
Nivel 5 = 125
Nivel 6 = 62
Nivel 7 = 31
Nivel 8 = 15
Nivel 9 = 7
Nivel 10 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000177s

## #1 g1 n4000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 4001
Nivel 2 = 2002
Nivel 3 = 1003
Nivel 4 = 504
Nivel 5 = 255
Nivel 6 = 131
Nivel 7 = 69
Nivel 8 = 39
Nivel 9 = 24
Nivel 10 = 17
Nivel 11 = 14
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
|=> Tempo total = 8059
|=> Trabalho de fn por nivel
Nivel 1 = 4000
Nivel 2 = 2000
Nivel 3 = 1000
Nivel 4 = 500
Nivel 5 = 250
Nivel 6 = 125
Nivel 7 = 62
Nivel 8 = 31
Nivel 9 = 15
Nivel 10 = 7
Nivel 11 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000226s

## #1 g1 n8000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 8001
Nivel 2 = 4002
Nivel 3 = 2003
Nivel 4 = 1004
Nivel 5 = 505
Nivel 6 = 256
Nivel 7 = 132
Nivel 8 = 70
Nivel 9 = 40
Nivel 10 = 25
Nivel 11 = 18
Nivel 12 = 15
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
|=> Tempo total = 16071
|=> Trabalho de fn por nivel
Nivel 1 = 8000
Nivel 2 = 4000
Nivel 3 = 2000
Nivel 4 = 1000
Nivel 5 = 500
Nivel 6 = 250
Nivel 7 = 125
Nivel 8 = 62
Nivel 9 = 31
Nivel 10 = 15
Nivel 11 = 7
Nivel 12 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000328s

## #1 g1 n16000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 16001
Nivel 2 = 8002
Nivel 3 = 4003
Nivel 4 = 2004
Nivel 5 = 1005
Nivel 6 = 506
Nivel 7 = 257
Nivel 8 = 133
Nivel 9 = 71
Nivel 10 = 41
Nivel 11 = 26
Nivel 12 = 19
Nivel 13 = 16
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
|=> Tempo total = 32084
|=> Trabalho de fn por nivel
Nivel 1 = 16000
Nivel 2 = 8000
Nivel 3 = 4000
Nivel 4 = 2000
Nivel 5 = 1000
Nivel 6 = 500
Nivel 7 = 250
Nivel 8 = 125
Nivel 9 = 62
Nivel 10 = 31
Nivel 11 = 15
Nivel 12 = 7
Nivel 13 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000572s

## #1 g1 n32000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 32001
Nivel 2 = 16002
Nivel 3 = 8003
Nivel 4 = 4004
Nivel 5 = 2005
Nivel 6 = 1006
Nivel 7 = 507
Nivel 8 = 258
Nivel 9 = 134
Nivel 10 = 72
Nivel 11 = 42
Nivel 12 = 27
Nivel 13 = 20
Nivel 14 = 17
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
|=> Tempo total = 64098
|=> Trabalho de fn por nivel
Nivel 1 = 32000
Nivel 2 = 16000
Nivel 3 = 8000
Nivel 4 = 4000
Nivel 5 = 2000
Nivel 6 = 1000
Nivel 7 = 500
Nivel 8 = 250
Nivel 9 = 125
Nivel 10 = 62
Nivel 11 = 31
Nivel 12 = 15
Nivel 13 = 7
Nivel 14 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.001035s

## #1 g1 n64000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 64001
Nivel 2 = 32002
Nivel 3 = 16003
Nivel 4 = 8004
Nivel 5 = 4005
Nivel 6 = 2006
Nivel 7 = 1007
Nivel 8 = 508
Nivel 9 = 259
Nivel 10 = 135
Nivel 11 = 73
Nivel 12 = 43
Nivel 13 = 28
Nivel 14 = 21
Nivel 15 = 18
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
|=> Tempo total = 128113
|=> Trabalho de fn por nivel
Nivel 1 = 64000
Nivel 2 = 32000
Nivel 3 = 16000
Nivel 4 = 8000
Nivel 5 = 4000
Nivel 6 = 2000
Nivel 7 = 1000
Nivel 8 = 500
Nivel 9 = 250
Nivel 10 = 125
Nivel 11 = 62
Nivel 12 = 31
Nivel 13 = 15
Nivel 14 = 7
Nivel 15 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.001736s

## #1 g1 n128000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 128001
Nivel 2 = 64002
Nivel 3 = 32003
Nivel 4 = 16004
Nivel 5 = 8005
Nivel 6 = 4006
Nivel 7 = 2007
Nivel 8 = 1008
Nivel 9 = 509
Nivel 10 = 260
Nivel 11 = 136
Nivel 12 = 74
Nivel 13 = 44
Nivel 14 = 29
Nivel 15 = 22
Nivel 16 = 19
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
Nivel 16 = 1
|=> Tempo total = 256129
|=> Trabalho de fn por nivel
Nivel 1 = 128000
Nivel 2 = 64000
Nivel 3 = 32000
Nivel 4 = 16000
Nivel 5 = 8000
Nivel 6 = 4000
Nivel 7 = 2000
Nivel 8 = 1000
Nivel 9 = 500
Nivel 10 = 250
Nivel 11 = 125
Nivel 12 = 62
Nivel 13 = 31
Nivel 14 = 15
Nivel 15 = 7
Nivel 16 = 3

Metodo Mestre
T(n) = 1T( (n/2) + n^1
b = 2, a = 1, f(n) = n^1
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.003445s

## #1 g2 n50

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 2501
Nivel 2 = 627
Nivel 3 = 147
Nivel 4 = 40
Nivel 5 = 14
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
|=> Tempo total = 3329
|=> Trabalho de fn por nivel
Nivel 1 = 2500
Nivel 2 = 625
Nivel 3 = 144
Nivel 4 = 36
Nivel 5 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000176s

## #1 g2 n100

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 10001
Nivel 2 = 2502
Nivel 3 = 628
Nivel 4 = 148
Nivel 5 = 41
Nivel 6 = 15
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
|=> Tempo total = 13335
|=> Trabalho de fn por nivel
Nivel 1 = 10000
Nivel 2 = 2500
Nivel 3 = 625
Nivel 4 = 144
Nivel 5 = 36
Nivel 6 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000296s

## #1 g2 n200

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 40001
Nivel 2 = 10002
Nivel 3 = 2503
Nivel 4 = 629
Nivel 5 = 149
Nivel 6 = 42
Nivel 7 = 16
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
|=> Tempo total = 53342
|=> Trabalho de fn por nivel
Nivel 1 = 40000
Nivel 2 = 10000
Nivel 3 = 2500
Nivel 4 = 625
Nivel 5 = 144
Nivel 6 = 36
Nivel 7 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000957s

## #1 g2 n400

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 160001
Nivel 2 = 40002
Nivel 3 = 10003
Nivel 4 = 2504
Nivel 5 = 630
Nivel 6 = 150
Nivel 7 = 43
Nivel 8 = 17
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
|=> Tempo total = 213350
|=> Trabalho de fn por nivel
Nivel 1 = 160000
Nivel 2 = 40000
Nivel 3 = 10000
Nivel 4 = 2500
Nivel 5 = 625
Nivel 6 = 144
Nivel 7 = 36
Nivel 8 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.002935s

## #1 g2 n800

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 640001
Nivel 2 = 160002
Nivel 3 = 40003
Nivel 4 = 10004
Nivel 5 = 2505
Nivel 6 = 631
Nivel 7 = 151
Nivel 8 = 44
Nivel 9 = 18
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 853359
|=> Trabalho de fn por nivel
Nivel 1 = 640000
Nivel 2 = 160000
Nivel 3 = 40000
Nivel 4 = 10000
Nivel 5 = 2500
Nivel 6 = 625
Nivel 7 = 144
Nivel 8 = 36
Nivel 9 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.011446s

## #1 g2 n1000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1e+06
Nivel 2 = 250002
Nivel 3 = 62503
Nivel 4 = 15629
Nivel 5 = 3849
Nivel 6 = 967
Nivel 7 = 232
Nivel 8 = 57
Nivel 9 = 18
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 1.33326e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1e+06
Nivel 2 = 250000
Nivel 3 = 62500
Nivel 4 = 15625
Nivel 5 = 3844
Nivel 6 = 961
Nivel 7 = 225
Nivel 8 = 49
Nivel 9 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.01922s

## #1 g2 n2000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 4e+06
Nivel 2 = 1e+06
Nivel 3 = 250003
Nivel 4 = 62504
Nivel 5 = 15630
Nivel 6 = 3850
Nivel 7 = 968
Nivel 8 = 233
Nivel 9 = 58
Nivel 10 = 19
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
|=> Tempo total = 5.33327e+06
|=> Trabalho de fn por nivel
Nivel 1 = 4e+06
Nivel 2 = 1e+06
Nivel 3 = 250000
Nivel 4 = 62500
Nivel 5 = 15625
Nivel 6 = 3844
Nivel 7 = 961
Nivel 8 = 225
Nivel 9 = 49
Nivel 10 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.07166s

## #1 g2 n4000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 1.6e+07
Nivel 2 = 4e+06
Nivel 3 = 1e+06
Nivel 4 = 250004
Nivel 5 = 62505
Nivel 6 = 15631
Nivel 7 = 3851
Nivel 8 = 969
Nivel 9 = 234
Nivel 10 = 59
Nivel 11 = 20
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
|=> Tempo total = 2.13333e+07
|=> Trabalho de fn por nivel
Nivel 1 = 1.6e+07
Nivel 2 = 4e+06
Nivel 3 = 1e+06
Nivel 4 = 250000
Nivel 5 = 62500
Nivel 6 = 15625
Nivel 7 = 3844
Nivel 8 = 961
Nivel 9 = 225
Nivel 10 = 49
Nivel 11 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.281601s

## #1 g2 n8000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 1.6e+07
Nivel 3 = 4e+06
Nivel 4 = 1e+06
Nivel 5 = 250005
Nivel 6 = 62506
Nivel 7 = 15632
Nivel 8 = 3852
Nivel 9 = 970
Nivel 10 = 235
Nivel 11 = 60
Nivel 12 = 21
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
|=> Tempo total = 8.53333e+07
|=> Trabalho de fn por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 1.6e+07
Nivel 3 = 4e+06
Nivel 4 = 1e+06
Nivel 5 = 250000
Nivel 6 = 62500
Nivel 7 = 15625
Nivel 8 = 3844
Nivel 9 = 961
Nivel 10 = 225
Nivel 11 = 49
Nivel 12 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 1.12244s

## #1 g2 n16000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 2.56e+08
Nivel 2 = 6.4e+07
Nivel 3 = 1.6e+07
Nivel 4 = 4e+06
Nivel 5 = 1e+06
Nivel 6 = 250006
Nivel 7 = 62507
Nivel 8 = 15633
Nivel 9 = 3853
Nivel 10 = 971
Nivel 11 = 236
Nivel 12 = 61
Nivel 13 = 22
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
|=> Tempo total = 3.41333e+08
|=> Trabalho de fn por nivel
Nivel 1 = 2.56e+08
Nivel 2 = 6.4e+07
Nivel 3 = 1.6e+07
Nivel 4 = 4e+06
Nivel 5 = 1e+06
Nivel 6 = 250000
Nivel 7 = 62500
Nivel 8 = 15625
Nivel 9 = 3844
Nivel 10 = 961
Nivel 11 = 225
Nivel 12 = 49
Nivel 13 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 4.57672s

## #1 g2 n32000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 1.024e+09
Nivel 2 = 2.56e+08
Nivel 3 = 6.4e+07
Nivel 4 = 1.6e+07
Nivel 5 = 4e+06
Nivel 6 = 1.00001e+06
Nivel 7 = 250007
Nivel 8 = 62508
Nivel 9 = 15634
Nivel 10 = 3854
Nivel 11 = 972
Nivel 12 = 237
Nivel 13 = 62
Nivel 14 = 23
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
|=> Tempo total = 1.36533e+09
|=> Trabalho de fn por nivel
Nivel 1 = 1.024e+09
Nivel 2 = 2.56e+08
Nivel 3 = 6.4e+07
Nivel 4 = 1.6e+07
Nivel 5 = 4e+06
Nivel 6 = 1e+06
Nivel 7 = 250000
Nivel 8 = 62500
Nivel 9 = 15625
Nivel 10 = 3844
Nivel 11 = 961
Nivel 12 = 225
Nivel 13 = 49
Nivel 14 = 9

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 18.0901s

## #1 g2 n64000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 1.024e+09
Nivel 3 = 2.56e+08
Nivel 4 = 6.4e+07
Nivel 5 = 1.6e+07
Nivel 6 = 4.00001e+06
Nivel 7 = 1.00001e+06
Nivel 8 = 250008
Nivel 9 = 62509
Nivel 10 = 15635
Nivel 11 = 3855
Nivel 12 = 973
Nivel 13 = 238
Nivel 14 = 63
Nivel 15 = 24
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
|=> Tempo total = 1.36533e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 18.6256s

## #1 g2 n128000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 1.024e+09
Nivel 4 = 2.56e+08
Nivel 5 = 6.4e+07
Nivel 6 = 1.6e+07
Nivel 7 = 4.00001e+06
Nivel 8 = 1.00001e+06
Nivel 9 = 250009
Nivel 10 = 62510
Nivel 11 = 15636
Nivel 12 = 3856
Nivel 13 = 974
Nivel 14 = 239
Nivel 15 = 64
Nivel 16 = 25
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
Nivel 16 = 1
|=> Tempo total = 1.36533e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^2
b = 2, a = 1, f(n) = n^2
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 18.1129s

## #1 g3 n50

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 125001
Nivel 2 = 15627
Nivel 3 = 1731
Nivel 4 = 220
Nivel 5 = 32
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
|=> Tempo total = 142611
|=> Trabalho de fn por nivel
Nivel 1 = 125000
Nivel 2 = 15625
Nivel 3 = 1728
Nivel 4 = 216
Nivel 5 = 27

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.0109s

## #1 g3 n100

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 1e+06
Nivel 2 = 125002
Nivel 3 = 15628
Nivel 4 = 1732
Nivel 5 = 221
Nivel 6 = 33
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
|=> Tempo total = 1.14262e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1e+06
Nivel 2 = 125000
Nivel 3 = 15625
Nivel 4 = 1728
Nivel 5 = 216
Nivel 6 = 27

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.082498s

## #1 g3 n200

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 8e+06
Nivel 2 = 1e+06
Nivel 3 = 125003
Nivel 4 = 15629
Nivel 5 = 1733
Nivel 6 = 222
Nivel 7 = 34
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
|=> Tempo total = 9.14262e+06
|=> Trabalho de fn por nivel
Nivel 1 = 8e+06
Nivel 2 = 1e+06
Nivel 3 = 125000
Nivel 4 = 15625
Nivel 5 = 1728
Nivel 6 = 216
Nivel 7 = 27

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.643714s

## #1 g3 n400

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 8e+06
Nivel 3 = 1e+06
Nivel 4 = 125004
Nivel 5 = 15630
Nivel 6 = 1734
Nivel 7 = 223
Nivel 8 = 35
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
|=> Tempo total = 7.31426e+07
|=> Trabalho de fn por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 8e+06
Nivel 3 = 1e+06
Nivel 4 = 125000
Nivel 5 = 15625
Nivel 6 = 1728
Nivel 7 = 216
Nivel 8 = 27

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 5.18119s

## #1 g3 n800

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 5.12e+08
Nivel 2 = 6.4e+07
Nivel 3 = 8e+06
Nivel 4 = 1e+06
Nivel 5 = 125005
Nivel 6 = 15631
Nivel 7 = 1735
Nivel 8 = 224
Nivel 9 = 36
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 5.85143e+08
|=> Trabalho de fn por nivel
Nivel 1 = 5.12e+08
Nivel 2 = 6.4e+07
Nivel 3 = 8e+06
Nivel 4 = 1e+06
Nivel 5 = 125000
Nivel 6 = 15625
Nivel 7 = 1728
Nivel 8 = 216
Nivel 9 = 27

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 41.0144s

## #1 g3 n1000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1e+09
Nivel 2 = 1.25e+08
Nivel 3 = 1.5625e+07
Nivel 4 = 1.95313e+06
Nivel 5 = 238333
Nivel 6 = 29797
Nivel 7 = 3382
Nivel 8 = 351
Nivel 9 = 36
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel
Nivel 1 = 1e+09
Nivel 2 = 1.25e+08
Nivel 3 = 1.5625e+07
Nivel 4 = 1.95312e+06
Nivel 5 = 238328
Nivel 6 = 29791
Nivel 7 = 3375
Nivel 8 = 343
Nivel 9 = 27

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 80.2474s

## #1 g3 n2000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 1e+09
Nivel 3 = 1.25e+08
Nivel 4 = 1.5625e+07
Nivel 5 = 1.95313e+06
Nivel 6 = 238334
Nivel 7 = 29798
Nivel 8 = 3383
Nivel 9 = 352
Nivel 10 = 37
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 80.3011s

## #1 g3 n4000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 1e+09
Nivel 4 = 1.25e+08
Nivel 5 = 1.5625e+07
Nivel 6 = 1.95313e+06
Nivel 7 = 238335
Nivel 8 = 29799
Nivel 9 = 3384
Nivel 10 = 353
Nivel 11 = 38
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 80.7648s

## #1 g3 n8000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 3
Nivel 4 = 1e+09
Nivel 5 = 1.25e+08
Nivel 6 = 1.5625e+07
Nivel 7 = 1.95313e+06
Nivel 8 = 238336
Nivel 9 = 29800
Nivel 10 = 3385
Nivel 11 = 354
Nivel 12 = 39
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 81.0083s

## #1 g3 n16000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 3
Nivel 4 = 4
Nivel 5 = 1e+09
Nivel 6 = 1.25e+08
Nivel 7 = 1.5625e+07
Nivel 8 = 1.95313e+06
Nivel 9 = 238337
Nivel 10 = 29801
Nivel 11 = 3386
Nivel 12 = 355
Nivel 13 = 40
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 80.5864s

## #1 g3 n32000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 3
Nivel 4 = 4
Nivel 5 = 5
Nivel 6 = 1e+09
Nivel 7 = 1.25e+08
Nivel 8 = 1.5625e+07
Nivel 9 = 1.95313e+06
Nivel 10 = 238338
Nivel 11 = 29802
Nivel 12 = 3387
Nivel 13 = 356
Nivel 14 = 41
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 80.3074s

## #1 g3 n64000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 3
Nivel 4 = 4
Nivel 5 = 5
Nivel 6 = 6
Nivel 7 = 1e+09
Nivel 8 = 1.25e+08
Nivel 9 = 1.5625e+07
Nivel 10 = 1.95314e+06
Nivel 11 = 238339
Nivel 12 = 29803
Nivel 13 = 3388
Nivel 14 = 357
Nivel 15 = 42
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 80.3424s

## #1 g3 n128000

T(n) = 1T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 3
Nivel 4 = 4
Nivel 5 = 5
Nivel 6 = 6
Nivel 7 = 7
Nivel 8 = 1e+09
Nivel 9 = 1.25e+08
Nivel 10 = 1.5625e+07
Nivel 11 = 1.95314e+06
Nivel 12 = 238340
Nivel 13 = 29804
Nivel 14 = 3389
Nivel 15 = 358
Nivel 16 = 43
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 1
Nivel 3 = 1
Nivel 4 = 1
Nivel 5 = 1
Nivel 6 = 1
Nivel 7 = 1
Nivel 8 = 1
Nivel 9 = 1
Nivel 10 = 1
Nivel 11 = 1
Nivel 12 = 1
Nivel 13 = 1
Nivel 14 = 1
Nivel 15 = 1
Nivel 16 = 1
|=> Tempo total = 1.14285e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 1T( (n/2) + n^3
b = 2, a = 1, f(n) = n^3
log de 1 na base 2 = 0
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 80.4565s

### BATERIA a2-b2-c0-d0-e1-f0
## #2 g0 n50

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
|=> Tempo total = 160
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.0001s

## #2 g0 n100

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
|=> Tempo total = 384
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 8.6e-05s

## #2 g0 n200

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
|=> Tempo total = 896
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000125s

## #2 g0 n400

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
|=> Tempo total = 2048
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000198s

## #2 g0 n800

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 4608
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000512s

## #2 g0 n1000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 4608
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000152s

## #2 g0 n2000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
Nivel 10 = 5632
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
|=> Tempo total = 10240
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000202s

## #2 g0 n4000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
Nivel 10 = 5632
Nivel 11 = 12288
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
|=> Tempo total = 22528
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000287s

## #2 g0 n8000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
Nivel 10 = 5632
Nivel 11 = 12288
Nivel 12 = 26624
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
|=> Tempo total = 49152
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.000474s

## #2 g0 n16000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
Nivel 10 = 5632
Nivel 11 = 12288
Nivel 12 = 26624
Nivel 13 = 57344
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
|=> Tempo total = 106496
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.001123s

## #2 g0 n32000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
Nivel 10 = 5632
Nivel 11 = 12288
Nivel 12 = 26624
Nivel 13 = 57344
Nivel 14 = 122880
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
|=> Tempo total = 229376
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.001605s

## #2 g0 n64000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
Nivel 10 = 5632
Nivel 11 = 12288
Nivel 12 = 26624
Nivel 13 = 57344
Nivel 14 = 122880
Nivel 15 = 262144
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
|=> Tempo total = 491520
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.002648s

## #2 g0 n128000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 6
Nivel 3 = 16
Nivel 4 = 40
Nivel 5 = 96
Nivel 6 = 224
Nivel 7 = 512
Nivel 8 = 1152
Nivel 9 = 2560
Nivel 10 = 5632
Nivel 11 = 12288
Nivel 12 = 26624
Nivel 13 = 57344
Nivel 14 = 122880
Nivel 15 = 262144
Nivel 16 = 557056
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
Nivel 16 = 32768
|=> Tempo total = 1.04858e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
Nivel 16 = 32768

Metodo Mestre
T(n) = 2T( (n/2) + n^0
b = 2, a = 2, f(n) = n^0
log de 2 na base 2 = 1
Caso 1 Método Mestre
T(n) = Teta(n^1)

Tempo Execução = 0.004747s

## #2 g1 n50

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 51
Nivel 2 = 54
Nivel 3 = 60
Nivel 4 = 80
Nivel 5 = 128
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
|=> Tempo total = 373
|=> Trabalho de fn por nivel
Nivel 1 = 50
Nivel 2 = 50
Nivel 3 = 48
Nivel 4 = 48
Nivel 5 = 48

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 8.5e-05s

## #2 g1 n100

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 101
Nivel 2 = 104
Nivel 3 = 112
Nivel 4 = 128
Nivel 5 = 176
Nivel 6 = 288
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
|=> Tempo total = 909
|=> Trabalho de fn por nivel
Nivel 1 = 100
Nivel 2 = 100
Nivel 3 = 100
Nivel 4 = 96
Nivel 5 = 96
Nivel 6 = 96

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 9.8e-05s

## #2 g1 n200

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 201
Nivel 2 = 204
Nivel 3 = 212
Nivel 4 = 232
Nivel 5 = 272
Nivel 6 = 384
Nivel 7 = 640
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
|=> Tempo total = 2145
|=> Trabalho de fn por nivel
Nivel 1 = 200
Nivel 2 = 200
Nivel 3 = 200
Nivel 4 = 200
Nivel 5 = 192
Nivel 6 = 192
Nivel 7 = 192

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.000115s

## #2 g1 n400

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 401
Nivel 2 = 404
Nivel 3 = 412
Nivel 4 = 432
Nivel 5 = 480
Nivel 6 = 576
Nivel 7 = 832
Nivel 8 = 1408
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
|=> Tempo total = 4945
|=> Trabalho de fn por nivel
Nivel 1 = 400
Nivel 2 = 400
Nivel 3 = 400
Nivel 4 = 400
Nivel 5 = 400
Nivel 6 = 384
Nivel 7 = 384
Nivel 8 = 384

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.000163s

## #2 g1 n800

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 801
Nivel 2 = 804
Nivel 3 = 812
Nivel 4 = 832
Nivel 5 = 880
Nivel 6 = 992
Nivel 7 = 1216
Nivel 8 = 1792
Nivel 9 = 3072
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 11201
|=> Trabalho de fn por nivel
Nivel 1 = 800
Nivel 2 = 800
Nivel 3 = 800
Nivel 4 = 800
Nivel 5 = 800
Nivel 6 = 800
Nivel 7 = 768
Nivel 8 = 768
Nivel 9 = 768

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.00024s

## #2 g1 n1000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1001
Nivel 2 = 1004
Nivel 3 = 1012
Nivel 4 = 1032
Nivel 5 = 1072
Nivel 6 = 1184
Nivel 7 = 1408
Nivel 8 = 1920
Nivel 9 = 3072
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 12705
|=> Trabalho de fn por nivel
Nivel 1 = 1000
Nivel 2 = 1000
Nivel 3 = 1000
Nivel 4 = 1000
Nivel 5 = 992
Nivel 6 = 992
Nivel 7 = 960
Nivel 8 = 896
Nivel 9 = 768

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.000359s

## #2 g1 n2000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 2001
Nivel 2 = 2004
Nivel 3 = 2012
Nivel 4 = 2032
Nivel 5 = 2080
Nivel 6 = 2176
Nivel 7 = 2432
Nivel 8 = 2944
Nivel 9 = 4096
Nivel 10 = 6656
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
|=> Tempo total = 28433
|=> Trabalho de fn por nivel
Nivel 1 = 2000
Nivel 2 = 2000
Nivel 3 = 2000
Nivel 4 = 2000
Nivel 5 = 2000
Nivel 6 = 1984
Nivel 7 = 1984
Nivel 8 = 1920
Nivel 9 = 1792
Nivel 10 = 1536

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.000479s

## #2 g1 n4000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 4001
Nivel 2 = 4004
Nivel 3 = 4012
Nivel 4 = 4032
Nivel 5 = 4080
Nivel 6 = 4192
Nivel 7 = 4416
Nivel 8 = 4992
Nivel 9 = 6144
Nivel 10 = 8704
Nivel 11 = 14336
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
|=> Tempo total = 62913
|=> Trabalho de fn por nivel
Nivel 1 = 4000
Nivel 2 = 4000
Nivel 3 = 4000
Nivel 4 = 4000
Nivel 5 = 4000
Nivel 6 = 4000
Nivel 7 = 3968
Nivel 8 = 3968
Nivel 9 = 3840
Nivel 10 = 3584
Nivel 11 = 3072

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.00089s

## #2 g1 n8000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 8001
Nivel 2 = 8004
Nivel 3 = 8012
Nivel 4 = 8032
Nivel 5 = 8080
Nivel 6 = 8192
Nivel 7 = 8448
Nivel 8 = 8960
Nivel 9 = 10240
Nivel 10 = 12800
Nivel 11 = 18432
Nivel 12 = 30720
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
|=> Tempo total = 137921
|=> Trabalho de fn por nivel
Nivel 1 = 8000
Nivel 2 = 8000
Nivel 3 = 8000
Nivel 4 = 8000
Nivel 5 = 8000
Nivel 6 = 8000
Nivel 7 = 8000
Nivel 8 = 7936
Nivel 9 = 7936
Nivel 10 = 7680
Nivel 11 = 7168
Nivel 12 = 6144

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.001686s

## #2 g1 n16000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 16001
Nivel 2 = 16004
Nivel 3 = 16012
Nivel 4 = 16032
Nivel 5 = 16080
Nivel 6 = 16192
Nivel 7 = 16448
Nivel 8 = 17024
Nivel 9 = 18176
Nivel 10 = 20992
Nivel 11 = 26624
Nivel 12 = 38912
Nivel 13 = 65536
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
|=> Tempo total = 300033
|=> Trabalho de fn por nivel
Nivel 1 = 16000
Nivel 2 = 16000
Nivel 3 = 16000
Nivel 4 = 16000
Nivel 5 = 16000
Nivel 6 = 16000
Nivel 7 = 16000
Nivel 8 = 16000
Nivel 9 = 15872
Nivel 10 = 15872
Nivel 11 = 15360
Nivel 12 = 14336
Nivel 13 = 12288

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.003323s


T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 32001
Nivel 2 = 32004
Nivel 3 = 32012
Nivel 4 = 32032
Nivel 5 = 32080
Nivel 6 = 32192
Nivel 7 = 32448
Nivel 8 = 33024
Nivel 9 = 34304
Nivel 10 = 36864
Nivel 11 = 43008
Nivel 12 = 55296
Nivel 13 = 81920
Nivel 14 = 139264
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
|=> Tempo total = 648449
|=> Trabalho de fn por nivel
Nivel 1 = 32000
Nivel 2 = 32000
Nivel 3 = 32000
Nivel 4 = 32000
Nivel 5 = 32000
Nivel 6 = 32000
Nivel 7 = 32000
Nivel 8 = 32000
Nivel 9 = 32000
Nivel 10 = 31744
Nivel 11 = 31744
Nivel 12 = 30720
Nivel 13 = 28672
Nivel 14 = 24576

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.006585s

## #2 g1 n32000
## #2 g1 n64000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 64001
Nivel 2 = 64004
Nivel 3 = 64012
Nivel 4 = 64032
Nivel 5 = 64080
Nivel 6 = 64192
Nivel 7 = 64448
Nivel 8 = 65024
Nivel 9 = 66304
Nivel 10 = 69120
Nivel 11 = 74752
Nivel 12 = 88064
Nivel 13 = 114688
Nivel 14 = 172032
Nivel 15 = 294912
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
|=> Tempo total = 1.39366e+06
|=> Trabalho de fn por nivel
Nivel 1 = 64000
Nivel 2 = 64000
Nivel 3 = 64000
Nivel 4 = 64000
Nivel 5 = 64000
Nivel 6 = 64000
Nivel 7 = 64000
Nivel 8 = 64000
Nivel 9 = 64000
Nivel 10 = 64000
Nivel 11 = 63488
Nivel 12 = 63488
Nivel 13 = 61440
Nivel 14 = 57344
Nivel 15 = 49152

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.01645s

## #2 g1 n128000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 128001
Nivel 2 = 128004
Nivel 3 = 128012
Nivel 4 = 128032
Nivel 5 = 128080
Nivel 6 = 128192
Nivel 7 = 128448
Nivel 8 = 129024
Nivel 9 = 130304
Nivel 10 = 133120
Nivel 11 = 139264
Nivel 12 = 151552
Nivel 13 = 180224
Nivel 14 = 237568
Nivel 15 = 360448
Nivel 16 = 622592
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
Nivel 16 = 32768
|=> Tempo total = 2.98086e+06
|=> Trabalho de fn por nivel
Nivel 1 = 128000
Nivel 2 = 128000
Nivel 3 = 128000
Nivel 4 = 128000
Nivel 5 = 128000
Nivel 6 = 128000
Nivel 7 = 128000
Nivel 8 = 128000
Nivel 9 = 128000
Nivel 10 = 128000
Nivel 11 = 128000
Nivel 12 = 126976
Nivel 13 = 126976
Nivel 14 = 122880
Nivel 15 = 114688
Nivel 16 = 98304

Metodo Mestre
T(n) = 2T( (n/2) + n^1
b = 2, a = 2, f(n) = n^1
log de 2 na base 2 = 1
Caso 2 Método Mestre
T(n) = Teta(n^1lgn)

Tempo Execução = 0.031461s

## #2 g2 n50

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 2501
Nivel 2 = 1254
Nivel 3 = 588
Nivel 4 = 320
Nivel 5 = 224
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
|=> Tempo total = 4887
|=> Trabalho de fn por nivel
Nivel 1 = 2500
Nivel 2 = 1250
Nivel 3 = 576
Nivel 4 = 288
Nivel 5 = 144

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000169s

## #2 g2 n100

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 10001
Nivel 2 = 5004
Nivel 3 = 2512
Nivel 4 = 1184
Nivel 5 = 656
Nivel 6 = 480
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
|=> Tempo total = 19837
|=> Trabalho de fn por nivel
Nivel 1 = 10000
Nivel 2 = 5000
Nivel 3 = 2500
Nivel 4 = 1152
Nivel 5 = 576
Nivel 6 = 288

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000366s

## #2 g2 n200

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 40001
Nivel 2 = 20004
Nivel 3 = 10012
Nivel 4 = 5032
Nivel 5 = 2384
Nivel 6 = 1344
Nivel 7 = 1024
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
|=> Tempo total = 79801
|=> Trabalho de fn por nivel
Nivel 1 = 40000
Nivel 2 = 20000
Nivel 3 = 10000
Nivel 4 = 5000
Nivel 5 = 2304
Nivel 6 = 1152
Nivel 7 = 576

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.001161s

## #2 g2 n400

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 160001
Nivel 2 = 80004
Nivel 3 = 40012
Nivel 4 = 20032
Nivel 5 = 10080
Nivel 6 = 4800
Nivel 7 = 2752
Nivel 8 = 2176
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
|=> Tempo total = 319857
|=> Trabalho de fn por nivel
Nivel 1 = 160000
Nivel 2 = 80000
Nivel 3 = 40000
Nivel 4 = 20000
Nivel 5 = 10000
Nivel 6 = 4608
Nivel 7 = 2304
Nivel 8 = 1152

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.005608s

## #2 g2 n800

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 640001
Nivel 2 = 320004
Nivel 3 = 160012
Nivel 4 = 80032
Nivel 5 = 40080
Nivel 6 = 20192
Nivel 7 = 9664
Nivel 8 = 5632
Nivel 9 = 4608
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 1.28022e+06
|=> Trabalho de fn por nivel
Nivel 1 = 640000
Nivel 2 = 320000
Nivel 3 = 160000
Nivel 4 = 80000
Nivel 5 = 40000
Nivel 6 = 20000
Nivel 7 = 9216
Nivel 8 = 4608
Nivel 9 = 2304

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.017611s

## #2 g2 n1000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1e+06
Nivel 2 = 500004
Nivel 3 = 250012
Nivel 4 = 125032
Nivel 5 = 61584
Nivel 6 = 30944
Nivel 7 = 14848
Nivel 8 = 7296
Nivel 9 = 4608
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 1.99433e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1e+06
Nivel 2 = 500000
Nivel 3 = 250000
Nivel 4 = 125000
Nivel 5 = 61504
Nivel 6 = 30752
Nivel 7 = 14400
Nivel 8 = 6272
Nivel 9 = 2304

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.02845s

## #2 g2 n2000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 4e+06
Nivel 2 = 2e+06
Nivel 3 = 1.00001e+06
Nivel 4 = 500032
Nivel 5 = 250080
Nivel 6 = 123200
Nivel 7 = 61952
Nivel 8 = 29824
Nivel 9 = 14848
Nivel 10 = 9728
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
|=> Tempo total = 7.98968e+06
|=> Trabalho de fn por nivel
Nivel 1 = 4e+06
Nivel 2 = 2e+06
Nivel 3 = 1e+06
Nivel 4 = 500000
Nivel 5 = 250000
Nivel 6 = 123008
Nivel 7 = 61504
Nivel 8 = 28800
Nivel 9 = 12544
Nivel 10 = 4608

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.106905s

## #2 g2 n4000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 1.6e+07
Nivel 2 = 8e+06
Nivel 3 = 4.00001e+06
Nivel 4 = 2.00003e+06
Nivel 5 = 1.00008e+06
Nivel 6 = 500192
Nivel 7 = 246464
Nivel 8 = 124032
Nivel 9 = 59904
Nivel 10 = 30208
Nivel 11 = 20480
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
|=> Tempo total = 3.19814e+07
|=> Trabalho de fn por nivel
Nivel 1 = 1.6e+07
Nivel 2 = 8e+06
Nivel 3 = 4e+06
Nivel 4 = 2e+06
Nivel 5 = 1e+06
Nivel 6 = 500000
Nivel 7 = 246016
Nivel 8 = 123008
Nivel 9 = 57600
Nivel 10 = 25088
Nivel 11 = 9216

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.4222s

## #2 g2 n8000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 3.2e+07
Nivel 3 = 1.6e+07
Nivel 4 = 8.00003e+06
Nivel 5 = 4.00008e+06
Nivel 6 = 2.00019e+06
Nivel 7 = 1.00045e+06
Nivel 8 = 493056
Nivel 9 = 248320
Nivel 10 = 120320
Nivel 11 = 61440
Nivel 12 = 43008
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
|=> Tempo total = 1.27967e+08
|=> Trabalho de fn por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 3.2e+07
Nivel 3 = 1.6e+07
Nivel 4 = 8e+06
Nivel 5 = 4e+06
Nivel 6 = 2e+06
Nivel 7 = 1e+06
Nivel 8 = 492032
Nivel 9 = 246016
Nivel 10 = 115200
Nivel 11 = 50176
Nivel 12 = 18432

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 1.6939s

## #2 g2 n16000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 2.56e+08
Nivel 2 = 1.28e+08
Nivel 3 = 6.4e+07
Nivel 4 = 3.2e+07
Nivel 5 = 1.60001e+07
Nivel 6 = 8.00019e+06
Nivel 7 = 4.00045e+06
Nivel 8 = 2.00102e+06
Nivel 9 = 986368
Nivel 10 = 497152
Nivel 11 = 241664
Nivel 12 = 124928
Nivel 13 = 90112
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
|=> Tempo total = 5.11942e+08
|=> Trabalho de fn por nivel
Nivel 1 = 2.56e+08
Nivel 2 = 1.28e+08
Nivel 3 = 6.4e+07
Nivel 4 = 3.2e+07
Nivel 5 = 1.6e+07
Nivel 6 = 8e+06
Nivel 7 = 4e+06
Nivel 8 = 2e+06
Nivel 9 = 984064
Nivel 10 = 492032
Nivel 11 = 230400
Nivel 12 = 100352
Nivel 13 = 36864

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 6.7531s

## #2 g2 n32000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 1.024e+09
Nivel 2 = 5.12e+08
Nivel 3 = 2.56e+08
Nivel 4 = 1.28e+08
Nivel 5 = 6.40001e+07
Nivel 6 = 3.20002e+07
Nivel 7 = 1.60004e+07
Nivel 8 = 8.00102e+06
Nivel 9 = 4.0023e+06
Nivel 10 = 1.97325e+06
Nivel 11 = 995328
Nivel 12 = 485376
Nivel 13 = 253952
Nivel 14 = 188416
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
|=> Tempo total = 2.0479e+09
|=> Trabalho de fn por nivel
Nivel 1 = 1.024e+09
Nivel 2 = 5.12e+08
Nivel 3 = 2.56e+08
Nivel 4 = 1.28e+08
Nivel 5 = 6.4e+07
Nivel 6 = 3.2e+07
Nivel 7 = 1.6e+07
Nivel 8 = 8e+06
Nivel 9 = 4e+06
Nivel 10 = 1.96813e+06
Nivel 11 = 984064
Nivel 12 = 460800
Nivel 13 = 200704
Nivel 14 = 73728

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 27.6545s

## #2 g2 n64000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2.048e+09
Nivel 3 = 1.024e+09
Nivel 4 = 5.12e+08
Nivel 5 = 2.56e+08
Nivel 6 = 1.28e+08
Nivel 7 = 6.40004e+07
Nivel 8 = 3.2001e+07
Nivel 9 = 1.60023e+07
Nivel 10 = 8.00512e+06
Nivel 11 = 3.94752e+06
Nivel 12 = 1.9927e+06
Nivel 13 = 974848
Nivel 14 = 516096
Nivel 15 = 393216
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
|=> Tempo total = 4.09583e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 54.5373s

## #2 g2 n128000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 4.096e+09
Nivel 4 = 2.048e+09
Nivel 5 = 1.024e+09
Nivel 6 = 5.12e+08
Nivel 7 = 2.56e+08
Nivel 8 = 1.28001e+08
Nivel 9 = 6.40023e+07
Nivel 10 = 3.20051e+07
Nivel 11 = 1.60113e+07
Nivel 12 = 7.89709e+06
Nivel 13 = 3.9895e+06
Nivel 14 = 1.95789e+06
Nivel 15 = 1.04858e+06
Nivel 16 = 819200
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
Nivel 16 = 32768
|=> Tempo total = 8.19173e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^2
b = 2, a = 2, f(n) = n^2
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 108.729s

## #2 g3 n50

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 125001
Nivel 2 = 31254
Nivel 3 = 6924
Nivel 4 = 1760
Nivel 5 = 512
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
|=> Tempo total = 165451
|=> Trabalho de fn por nivel
Nivel 1 = 125000
Nivel 2 = 31250
Nivel 3 = 6912
Nivel 4 = 1728
Nivel 5 = 432

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.012132s

## #2 g3 n100

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 1e+06
Nivel 2 = 250004
Nivel 3 = 62512
Nivel 4 = 13856
Nivel 5 = 3536
Nivel 6 = 1056
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
|=> Tempo total = 1.33096e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1e+06
Nivel 2 = 250000
Nivel 3 = 62500
Nivel 4 = 13824
Nivel 5 = 3456
Nivel 6 = 864

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.095139s

## #2 g3 n200

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 8e+06
Nivel 2 = 2e+06
Nivel 3 = 500012
Nivel 4 = 125032
Nivel 5 = 27728
Nivel 6 = 7104
Nivel 7 = 2176
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
|=> Tempo total = 1.06621e+07
|=> Trabalho de fn por nivel
Nivel 1 = 8e+06
Nivel 2 = 2e+06
Nivel 3 = 500000
Nivel 4 = 125000
Nivel 5 = 27648
Nivel 6 = 6912
Nivel 7 = 1728

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.749644s

## #2 g3 n400

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 1.6e+07
Nivel 3 = 4.00001e+06
Nivel 4 = 1.00003e+06
Nivel 5 = 250080
Nivel 6 = 55488
Nivel 7 = 14272
Nivel 8 = 4480
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
|=> Tempo total = 8.53244e+07
|=> Trabalho de fn por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 1.6e+07
Nivel 3 = 4e+06
Nivel 4 = 1e+06
Nivel 5 = 250000
Nivel 6 = 55296
Nivel 7 = 13824
Nivel 8 = 3456

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 6.12001s

## #2 g3 n800

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 5.12e+08
Nivel 2 = 1.28e+08
Nivel 3 = 3.2e+07
Nivel 4 = 8.00003e+06
Nivel 5 = 2.00008e+06
Nivel 6 = 500192
Nivel 7 = 111040
Nivel 8 = 28672
Nivel 9 = 9216
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 6.82649e+08
|=> Trabalho de fn por nivel
Nivel 1 = 5.12e+08
Nivel 2 = 1.28e+08
Nivel 3 = 3.2e+07
Nivel 4 = 8e+06
Nivel 5 = 2e+06
Nivel 6 = 500000
Nivel 7 = 110592
Nivel 8 = 27648
Nivel 9 = 6912

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 48.1493s

## #2 g3 n1000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1e+09
Nivel 2 = 2.5e+08
Nivel 3 = 6.25e+07
Nivel 4 = 1.5625e+07
Nivel 5 = 3.81333e+06
Nivel 6 = 953504
Nivel 7 = 216448
Nivel 8 = 44928
Nivel 9 = 9216
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
|=> Tempo total = 1.33316e+09
|=> Trabalho de fn por nivel
Nivel 1 = 1e+09
Nivel 2 = 2.5e+08
Nivel 3 = 6.25e+07
Nivel 4 = 1.5625e+07
Nivel 5 = 3.81325e+06
Nivel 6 = 953312
Nivel 7 = 216000
Nivel 8 = 43904
Nivel 9 = 6912

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 94.0353s

## #2 g3 n2000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 2e+09
Nivel 3 = 5e+08
Nivel 4 = 1.25e+08
Nivel 5 = 3.12501e+07
Nivel 6 = 7.62669e+06
Nivel 7 = 1.90707e+06
Nivel 8 = 433024
Nivel 9 = 90112
Nivel 10 = 18944
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
|=> Tempo total = 2.66633e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 188.281s

## #2 g3 n4000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 4e+09
Nivel 4 = 1e+09
Nivel 5 = 2.5e+08
Nivel 6 = 6.25002e+07
Nivel 7 = 1.52534e+07
Nivel 8 = 3.81427e+06
Nivel 9 = 866304
Nivel 10 = 180736
Nivel 11 = 38912
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
|=> Tempo total = 5.33265e+09
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 374.891s

## #2 g3 n8000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 12
Nivel 4 = 8e+09
Nivel 5 = 2e+09
Nivel 6 = 5e+08
Nivel 7 = 1.25e+08
Nivel 8 = 3.0507e+07
Nivel 9 = 7.6288e+06
Nivel 10 = 1.73312e+06
Nivel 11 = 362496
Nivel 12 = 79872
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
|=> Tempo total = 1.06653e+10
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 748.671s

## #2 g3 n16000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 12
Nivel 4 = 32
Nivel 5 = 1.6e+10
Nivel 6 = 4e+09
Nivel 7 = 1e+09
Nivel 8 = 2.50001e+08
Nivel 9 = 6.10143e+07
Nivel 10 = 1.52581e+07
Nivel 11 = 3.46726e+06
Nivel 12 = 727040
Nivel 13 = 163840
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
|=> Tempo total = 2.13306e+10
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 1503.2s

## #2 g3 n32000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 12
Nivel 4 = 32
Nivel 5 = 80
Nivel 6 = 3.2e+10
Nivel 7 = 8e+09
Nivel 8 = 2e+09
Nivel 9 = 5.00002e+08
Nivel 10 = 1.22029e+08
Nivel 11 = 3.05172e+07
Nivel 12 = 6.93658e+06
Nivel 13 = 1.45818e+06
Nivel 14 = 335872
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
|=> Tempo total = 4.26613e+10
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 3035.23s

## #2 g3 n64000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 12
Nivel 4 = 32
Nivel 5 = 80
Nivel 6 = 192
Nivel 7 = 6.4e+10
Nivel 8 = 1.6e+10
Nivel 9 = 4e+09
Nivel 10 = 1.00001e+09
Nivel 11 = 2.44059e+08
Nivel 12 = 6.10365e+07
Nivel 13 = 1.38772e+07
Nivel 14 = 2.92454e+06
Nivel 15 = 688128
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
|=> Tempo total = 8.53226e+10
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 6018.32s

## #2 g3 n128000

T(n) = 2T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 12
Nivel 4 = 32
Nivel 5 = 80
Nivel 6 = 192
Nivel 7 = 448
Nivel 8 = 1.28e+11
Nivel 9 = 3.2e+10
Nivel 10 = 8.00001e+09
Nivel 11 = 2.00001e+09
Nivel 12 = 4.8812e+08
Nivel 13 = 1.22077e+08
Nivel 14 = 2.77627e+07
Nivel 15 = 5.86547e+06
Nivel 16 = 1.40902e+06
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 2
Nivel 3 = 4
Nivel 4 = 8
Nivel 5 = 16
Nivel 6 = 32
Nivel 7 = 64
Nivel 8 = 128
Nivel 9 = 256
Nivel 10 = 512
Nivel 11 = 1024
Nivel 12 = 2048
Nivel 13 = 4096
Nivel 14 = 8192
Nivel 15 = 16384
Nivel 16 = 32768
|=> Tempo total = 1.70645e+11
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 2T( (n/2) + n^3
b = 2, a = 2, f(n) = n^3
log de 2 na base 2 = 1
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 12008.5s

### BATERIA a4-b2-c0-d0-e1-f0
## #3 g0 n50

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
|=> Tempo total = 1934
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000126s

## #3 g0 n100

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
|=> Tempo total = 9102
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000197s

## #3 g0 n200

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
|=> Tempo total = 41870
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000499s

## #3 g0 n400

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
|=> Tempo total = 189326
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.002225s

## #3 g0 n800

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
|=> Tempo total = 844686
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.006825s

## #3 g0 n1000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
|=> Tempo total = 844686
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.007901s

## #3 g0 n2000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
Nivel 10 = 2.88358e+06
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
|=> Tempo total = 3.72827e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.027792s

## #3 g0 n4000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
Nivel 10 = 2.88358e+06
Nivel 11 = 1.25829e+07
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
|=> Tempo total = 1.63112e+07
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1.04858e+06

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.102995s

## #3 g0 n8000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
Nivel 10 = 2.88358e+06
Nivel 11 = 1.25829e+07
Nivel 12 = 5.4526e+07
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
|=> Tempo total = 7.08371e+07
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1.04858e+06
Nivel 12 = 4.1943e+06

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.400688s

## #3 g0 n16000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
Nivel 10 = 2.88358e+06
Nivel 11 = 1.25829e+07
Nivel 12 = 5.4526e+07
Nivel 13 = 2.34881e+08
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
|=> Tempo total = 3.05718e+08
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1.04858e+06
Nivel 12 = 4.1943e+06
Nivel 13 = 1.67772e+07

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 1.59976s

## #3 g0 n32000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
Nivel 10 = 2.88358e+06
Nivel 11 = 1.25829e+07
Nivel 12 = 5.4526e+07
Nivel 13 = 2.34881e+08
Nivel 14 = 1.00663e+09
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
|=> Tempo total = 1.31235e+09
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1.04858e+06
Nivel 12 = 4.1943e+06
Nivel 13 = 1.67772e+07
Nivel 14 = 6.71089e+07

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 6.57835s

## #3 g0 n64000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
Nivel 10 = 2.88358e+06
Nivel 11 = 1.25829e+07
Nivel 12 = 5.4526e+07
Nivel 13 = 2.34881e+08
Nivel 14 = 1.00663e+09
Nivel 15 = 4.29497e+09
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
Nivel 15 = 268435456
|=> Tempo total = 5.60732e+09
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1.04858e+06
Nivel 12 = 4.1943e+06
Nivel 13 = 1.67772e+07
Nivel 14 = 6.71089e+07
Nivel 15 = 2.68435e+08

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 25.6085s

## #3 g0 n128000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^0
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 2
Nivel 2 = 12
Nivel 3 = 64
Nivel 4 = 320
Nivel 5 = 1536
Nivel 6 = 7168
Nivel 7 = 32768
Nivel 8 = 147456
Nivel 9 = 655360
Nivel 10 = 2.88358e+06
Nivel 11 = 1.25829e+07
Nivel 12 = 5.4526e+07
Nivel 13 = 2.34881e+08
Nivel 14 = 1.00663e+09
Nivel 15 = 4.29497e+09
Nivel 16 = 1.82536e+10
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
Nivel 15 = 268435456
Nivel 16 = 1073741824
|=> Tempo total = 2.38609e+10
|=> Trabalho de fn por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1.04858e+06
Nivel 12 = 4.1943e+06
Nivel 13 = 1.67772e+07
Nivel 14 = 6.71089e+07
Nivel 15 = 2.68435e+08
Nivel 16 = 1.07374e+09

Metodo Mestre
T(n) = 4T( (n/2) + n^0
b = 2, a = 4, f(n) = n^0
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 102.491s

## #3 g1 n50

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 51
Nivel 2 = 108
Nivel 3 = 240
Nivel 4 = 640
Nivel 5 = 2048
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
|=> Tempo total = 3087
|=> Trabalho de fn por nivel
Nivel 1 = 50
Nivel 2 = 100
Nivel 3 = 192
Nivel 4 = 384
Nivel 5 = 768

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000138s

## #3 g1 n100

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 101
Nivel 2 = 208
Nivel 3 = 448
Nivel 4 = 1024
Nivel 5 = 2816
Nivel 6 = 9216
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
|=> Tempo total = 13813
|=> Trabalho de fn por nivel
Nivel 1 = 100
Nivel 2 = 200
Nivel 3 = 400
Nivel 4 = 768
Nivel 5 = 1536
Nivel 6 = 3072

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.000248s

## #3 g1 n200

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 201
Nivel 2 = 408
Nivel 3 = 848
Nivel 4 = 1856
Nivel 5 = 4352
Nivel 6 = 12288
Nivel 7 = 40960
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
|=> Tempo total = 60913
|=> Trabalho de fn por nivel
Nivel 1 = 200
Nivel 2 = 400
Nivel 3 = 800
Nivel 4 = 1600
Nivel 5 = 3072
Nivel 6 = 6144
Nivel 7 = 12288

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.00081s

## #3 g1 n400

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 401
Nivel 2 = 808
Nivel 3 = 1648
Nivel 4 = 3456
Nivel 5 = 7680
Nivel 6 = 18432
Nivel 7 = 53248
Nivel 8 = 180224
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
|=> Tempo total = 265897
|=> Trabalho de fn por nivel
Nivel 1 = 400
Nivel 2 = 800
Nivel 3 = 1600
Nivel 4 = 3200
Nivel 5 = 6400
Nivel 6 = 12288
Nivel 7 = 24576
Nivel 8 = 49152

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.00308s

## #3 g1 n800

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 801
Nivel 2 = 1608
Nivel 3 = 3248
Nivel 4 = 6656
Nivel 5 = 14080
Nivel 6 = 31744
Nivel 7 = 77824
Nivel 8 = 229376
Nivel 9 = 786432
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
|=> Tempo total = 1.15177e+06
|=> Trabalho de fn por nivel
Nivel 1 = 800
Nivel 2 = 1600
Nivel 3 = 3200
Nivel 4 = 6400
Nivel 5 = 12800
Nivel 6 = 25600
Nivel 7 = 49152
Nivel 8 = 98304
Nivel 9 = 196608

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.010909s

## #3 g1 n1000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1001
Nivel 2 = 2008
Nivel 3 = 4048
Nivel 4 = 8256
Nivel 5 = 17152
Nivel 6 = 37888
Nivel 7 = 90112
Nivel 8 = 245760
Nivel 9 = 786432
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
|=> Tempo total = 1.19266e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1000
Nivel 2 = 2000
Nivel 3 = 4000
Nivel 4 = 8000
Nivel 5 = 15872
Nivel 6 = 31744
Nivel 7 = 61440
Nivel 8 = 114688
Nivel 9 = 196608

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.012888s

## #3 g1 n2000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 2001
Nivel 2 = 4008
Nivel 3 = 8048
Nivel 4 = 16256
Nivel 5 = 33280
Nivel 6 = 69632
Nivel 7 = 155648
Nivel 8 = 376832
Nivel 9 = 1.04858e+06
Nivel 10 = 3.40787e+06
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
|=> Tempo total = 5.12215e+06
|=> Trabalho de fn por nivel
Nivel 1 = 2000
Nivel 2 = 4000
Nivel 3 = 8000
Nivel 4 = 16000
Nivel 5 = 32000
Nivel 6 = 63488
Nivel 7 = 126976
Nivel 8 = 245760
Nivel 9 = 458752
Nivel 10 = 786432

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.046865s

## #3 g1 n4000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 4001
Nivel 2 = 8008
Nivel 3 = 16048
Nivel 4 = 32256
Nivel 5 = 65280
Nivel 6 = 134144
Nivel 7 = 282624
Nivel 8 = 638976
Nivel 9 = 1.57286e+06
Nivel 10 = 4.45645e+06
Nivel 11 = 1.46801e+07
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
|=> Tempo total = 2.18907e+07
|=> Trabalho de fn por nivel
Nivel 1 = 4000
Nivel 2 = 8000
Nivel 3 = 16000
Nivel 4 = 32000
Nivel 5 = 64000
Nivel 6 = 128000
Nivel 7 = 253952
Nivel 8 = 507904
Nivel 9 = 983040
Nivel 10 = 1.83501e+06
Nivel 11 = 3.14573e+06

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.174975s

## #3 g1 n8000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 8001
Nivel 2 = 16008
Nivel 3 = 32048
Nivel 4 = 64256
Nivel 5 = 129280
Nivel 6 = 262144
Nivel 7 = 540672
Nivel 8 = 1.14688e+06
Nivel 9 = 2.62144e+06
Nivel 10 = 6.5536e+06
Nivel 11 = 1.88744e+07
Nivel 12 = 6.29146e+07
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
|=> Tempo total = 9.31633e+07
|=> Trabalho de fn por nivel
Nivel 1 = 8000
Nivel 2 = 16000
Nivel 3 = 32000
Nivel 4 = 64000
Nivel 5 = 128000
Nivel 6 = 256000
Nivel 7 = 512000
Nivel 8 = 1.01581e+06
Nivel 9 = 2.03162e+06
Nivel 10 = 3.93216e+06
Nivel 11 = 7.34003e+06
Nivel 12 = 1.25829e+07

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 0.693364s

## #3 g1 n16000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 16001
Nivel 2 = 32008
Nivel 3 = 64048
Nivel 4 = 128256
Nivel 5 = 257280
Nivel 6 = 518144
Nivel 7 = 1.05267e+06
Nivel 8 = 2.17907e+06
Nivel 9 = 4.65306e+06
Nivel 10 = 1.07479e+07
Nivel 11 = 2.7263e+07
Nivel 12 = 7.96918e+07
Nivel 13 = 2.68435e+08
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
|=> Tempo total = 3.95039e+08
|=> Trabalho de fn por nivel
Nivel 1 = 16000
Nivel 2 = 32000
Nivel 3 = 64000
Nivel 4 = 128000
Nivel 5 = 256000
Nivel 6 = 512000
Nivel 7 = 1.024e+06
Nivel 8 = 2.048e+06
Nivel 9 = 4.06323e+06
Nivel 10 = 8.12646e+06
Nivel 11 = 1.57286e+07
Nivel 12 = 2.93601e+07
Nivel 13 = 5.03316e+07

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 2.75771s

## #3 g1 n32000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 32001
Nivel 2 = 64008
Nivel 3 = 128048
Nivel 4 = 256256
Nivel 5 = 513280
Nivel 6 = 1.03014e+06
Nivel 7 = 2.07667e+06
Nivel 8 = 4.22707e+06
Nivel 9 = 8.78182e+06
Nivel 10 = 1.88744e+07
Nivel 11 = 4.40402e+07
Nivel 12 = 1.13246e+08
Nivel 13 = 3.35544e+08
Nivel 14 = 1.14085e+09
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
|=> Tempo total = 1.66967e+09
|=> Trabalho de fn por nivel
Nivel 1 = 32000
Nivel 2 = 64000
Nivel 3 = 128000
Nivel 4 = 256000
Nivel 5 = 512000
Nivel 6 = 1.024e+06
Nivel 7 = 2.048e+06
Nivel 8 = 4.096e+06
Nivel 9 = 8.192e+06
Nivel 10 = 1.62529e+07
Nivel 11 = 3.25059e+07
Nivel 12 = 6.29146e+07
Nivel 13 = 1.17441e+08
Nivel 14 = 2.01327e+08

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 11.063s

## #3 g1 n64000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 64001
Nivel 2 = 128008
Nivel 3 = 256048
Nivel 4 = 512256
Nivel 5 = 1.02528e+06
Nivel 6 = 2.05414e+06
Nivel 7 = 4.12467e+06
Nivel 8 = 8.32307e+06
Nivel 9 = 1.69738e+07
Nivel 10 = 3.53894e+07
Nivel 11 = 7.6546e+07
Nivel 12 = 1.80355e+08
Nivel 13 = 4.69762e+08
Nivel 14 = 1.40929e+09
Nivel 15 = 4.83184e+09
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
Nivel 15 = 268435456
|=> Tempo total = 7.03664e+09
|=> Trabalho de fn por nivel
Nivel 1 = 64000
Nivel 2 = 128000
Nivel 3 = 256000
Nivel 4 = 512000
Nivel 5 = 1.024e+06
Nivel 6 = 2.048e+06
Nivel 7 = 4.096e+06
Nivel 8 = 8.192e+06
Nivel 9 = 1.6384e+07
Nivel 10 = 3.2768e+07
Nivel 11 = 6.50117e+07
Nivel 12 = 1.30023e+08
Nivel 13 = 2.51658e+08
Nivel 14 = 4.69762e+08
Nivel 15 = 8.05306e+08

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 44.4707s

## #3 g1 n128000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^1
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 128001
Nivel 2 = 256008
Nivel 3 = 512048
Nivel 4 = 1.02426e+06
Nivel 5 = 2.04928e+06
Nivel 6 = 4.10214e+06
Nivel 7 = 8.22067e+06
Nivel 8 = 1.65151e+07
Nivel 9 = 3.33578e+07
Nivel 10 = 6.81574e+07
Nivel 11 = 1.42606e+08
Nivel 12 = 3.10378e+08
Nivel 13 = 7.38198e+08
Nivel 14 = 1.94616e+09
Nivel 15 = 5.90558e+09
Nivel 16 = 2.04011e+10
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
Nivel 15 = 268435456
Nivel 16 = 1073741824
|=> Tempo total = 2.95783e+10
|=> Trabalho de fn por nivel
Nivel 1 = 128000
Nivel 2 = 256000
Nivel 3 = 512000
Nivel 4 = 1.024e+06
Nivel 5 = 2.048e+06
Nivel 6 = 4.096e+06
Nivel 7 = 8.192e+06
Nivel 8 = 1.6384e+07
Nivel 9 = 3.2768e+07
Nivel 10 = 6.5536e+07
Nivel 11 = 1.31072e+08
Nivel 12 = 2.60047e+08
Nivel 13 = 5.20094e+08
Nivel 14 = 1.00663e+09
Nivel 15 = 1.87905e+09
Nivel 16 = 3.22123e+09

Metodo Mestre
T(n) = 4T( (n/2) + n^1
b = 2, a = 4, f(n) = n^1
log de 4 na base 2 = 2
Caso 1 Método Mestre
T(n) = Teta(n^2)

Tempo Execução = 178.182s

## #3 g2 n50

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 2501
Nivel 2 = 2508
Nivel 3 = 2352
Nivel 4 = 2560
Nivel 5 = 3584
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
|=> Tempo total = 13505
|=> Trabalho de fn por nivel
Nivel 1 = 2500
Nivel 2 = 2500
Nivel 3 = 2304
Nivel 4 = 2304
Nivel 5 = 2304

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 0.000259s

## #3 g2 n100

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 10001
Nivel 2 = 10008
Nivel 3 = 10048
Nivel 4 = 9472
Nivel 5 = 10496
Nivel 6 = 15360
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
|=> Tempo total = 65385
|=> Trabalho de fn por nivel
Nivel 1 = 10000
Nivel 2 = 10000
Nivel 3 = 10000
Nivel 4 = 9216
Nivel 5 = 9216
Nivel 6 = 9216

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 0.000955s

## #3 g2 n200

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 40001
Nivel 2 = 40008
Nivel 3 = 40048
Nivel 4 = 40256
Nivel 5 = 38144
Nivel 6 = 43008
Nivel 7 = 65536
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
|=> Tempo total = 307001
|=> Trabalho de fn por nivel
Nivel 1 = 40000
Nivel 2 = 40000
Nivel 3 = 40000
Nivel 4 = 40000
Nivel 5 = 36864
Nivel 6 = 36864
Nivel 7 = 36864

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 0.004466s

## #3 g2 n400

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 160001
Nivel 2 = 160008
Nivel 3 = 160048
Nivel 4 = 160256
Nivel 5 = 161280
Nivel 6 = 153600
Nivel 7 = 176128
Nivel 8 = 278528
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
|=> Tempo total = 1.40985e+06
|=> Trabalho de fn por nivel
Nivel 1 = 160000
Nivel 2 = 160000
Nivel 3 = 160000
Nivel 4 = 160000
Nivel 5 = 160000
Nivel 6 = 147456
Nivel 7 = 147456
Nivel 8 = 147456

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 0.021613s

## #3 g2 n800

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 640001
Nivel 2 = 640008
Nivel 3 = 640048
Nivel 4 = 640256
Nivel 5 = 641280
Nivel 6 = 646144
Nivel 7 = 618496
Nivel 8 = 720896
Nivel 9 = 1.17965e+06
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
|=> Tempo total = 6.36678e+06
|=> Trabalho de fn por nivel
Nivel 1 = 640000
Nivel 2 = 640000
Nivel 3 = 640000
Nivel 4 = 640000
Nivel 5 = 640000
Nivel 6 = 640000
Nivel 7 = 589824
Nivel 8 = 589824
Nivel 9 = 589824

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 0.083963s

## #3 g2 n1000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 1000
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 1e+06
Nivel 2 = 1.00001e+06
Nivel 3 = 1.00005e+06
Nivel 4 = 1.00026e+06
Nivel 5 = 985344
Nivel 6 = 990208
Nivel 7 = 950272
Nivel 8 = 933888
Nivel 9 = 1.17965e+06
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
|=> Tempo total = 9.03967e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1e+06
Nivel 2 = 1e+06
Nivel 3 = 1e+06
Nivel 4 = 1e+06
Nivel 5 = 984064
Nivel 6 = 984064
Nivel 7 = 921600
Nivel 8 = 802816
Nivel 9 = 589824

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 0.166086s

## #3 g2 n2000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 2000
|=> Altura arvore = 10
|=> Trabalho por nivel
Nivel 1 = 4e+06
Nivel 2 = 4.00001e+06
Nivel 3 = 4.00005e+06
Nivel 4 = 4.00026e+06
Nivel 5 = 4.00128e+06
Nivel 6 = 3.9424e+06
Nivel 7 = 3.96493e+06
Nivel 8 = 3.81747e+06
Nivel 9 = 3.80109e+06
Nivel 10 = 4.98074e+06
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
|=> Tempo total = 4.05082e+07
|=> Trabalho de fn por nivel
Nivel 1 = 4e+06
Nivel 2 = 4e+06
Nivel 3 = 4e+06
Nivel 4 = 4e+06
Nivel 5 = 4e+06
Nivel 6 = 3.93626e+06
Nivel 7 = 3.93626e+06
Nivel 8 = 3.6864e+06
Nivel 9 = 3.21126e+06
Nivel 10 = 2.3593e+06

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 0.517031s

## #3 g2 n4000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 4000
|=> Altura arvore = 11
|=> Trabalho por nivel
Nivel 1 = 1.6e+07
Nivel 2 = 1.6e+07
Nivel 3 = 1.6e+07
Nivel 4 = 1.60003e+07
Nivel 5 = 1.60013e+07
Nivel 6 = 1.60061e+07
Nivel 7 = 1.57737e+07
Nivel 8 = 1.58761e+07
Nivel 9 = 1.53354e+07
Nivel 10 = 1.54665e+07
Nivel 11 = 2.09715e+07
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
|=> Tempo total = 1.79431e+08
|=> Trabalho de fn por nivel
Nivel 1 = 1.6e+07
Nivel 2 = 1.6e+07
Nivel 3 = 1.6e+07
Nivel 4 = 1.6e+07
Nivel 5 = 1.6e+07
Nivel 6 = 1.6e+07
Nivel 7 = 1.5745e+07
Nivel 8 = 1.5745e+07
Nivel 9 = 1.47456e+07
Nivel 10 = 1.28451e+07
Nivel 11 = 9.43718e+06

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 2.2928s

## #3 g2 n8000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 8000
|=> Altura arvore = 12
|=> Trabalho por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 6.4e+07
Nivel 3 = 6.4e+07
Nivel 4 = 6.40003e+07
Nivel 5 = 6.40013e+07
Nivel 6 = 6.40061e+07
Nivel 7 = 6.40287e+07
Nivel 8 = 6.31112e+07
Nivel 9 = 6.35699e+07
Nivel 10 = 6.16038e+07
Nivel 11 = 6.29146e+07
Nivel 12 = 8.80804e+07
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
|=> Tempo total = 7.87316e+08
|=> Trabalho de fn por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 6.4e+07
Nivel 3 = 6.4e+07
Nivel 4 = 6.4e+07
Nivel 5 = 6.4e+07
Nivel 6 = 6.4e+07
Nivel 7 = 6.4e+07
Nivel 8 = 6.29801e+07
Nivel 9 = 6.29801e+07
Nivel 10 = 5.89824e+07
Nivel 11 = 5.13802e+07
Nivel 12 = 3.77487e+07

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 10.2824s

## #3 g2 n16000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 16000
|=> Altura arvore = 13
|=> Trabalho por nivel
Nivel 1 = 2.56e+08
Nivel 2 = 2.56e+08
Nivel 3 = 2.56e+08
Nivel 4 = 2.56e+08
Nivel 5 = 2.56001e+08
Nivel 6 = 2.56006e+08
Nivel 7 = 2.56029e+08
Nivel 8 = 2.56131e+08
Nivel 9 = 2.5251e+08
Nivel 10 = 2.54542e+08
Nivel 11 = 2.47464e+08
Nivel 12 = 2.55853e+08
Nivel 13 = 3.69099e+08
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
|=> Tempo total = 3.42763e+09
|=> Trabalho de fn por nivel
Nivel 1 = 2.56e+08
Nivel 2 = 2.56e+08
Nivel 3 = 2.56e+08
Nivel 4 = 2.56e+08
Nivel 5 = 2.56e+08
Nivel 6 = 2.56e+08
Nivel 7 = 2.56e+08
Nivel 8 = 2.56e+08
Nivel 9 = 2.5192e+08
Nivel 10 = 2.5192e+08
Nivel 11 = 2.3593e+08
Nivel 12 = 2.05521e+08
Nivel 13 = 1.50995e+08

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 43.2698s

## #3 g2 n32000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 32000
|=> Altura arvore = 14
|=> Trabalho por nivel
Nivel 1 = 1.024e+09
Nivel 2 = 1.024e+09
Nivel 3 = 1.024e+09
Nivel 4 = 1.024e+09
Nivel 5 = 1.024e+09
Nivel 6 = 1.02401e+09
Nivel 7 = 1.02403e+09
Nivel 8 = 1.02413e+09
Nivel 9 = 1.02459e+09
Nivel 10 = 1.0103e+09
Nivel 11 = 1.01922e+09
Nivel 12 = 9.9405e+08
Nivel 13 = 1.04019e+09
Nivel 14 = 1.5435e+09
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
|=> Tempo total = 1.4824e+10
|=> Trabalho de fn por nivel
Nivel 1 = 1.024e+09
Nivel 2 = 1.024e+09
Nivel 3 = 1.024e+09
Nivel 4 = 1.024e+09
Nivel 5 = 1.024e+09
Nivel 6 = 1.024e+09
Nivel 7 = 1.024e+09
Nivel 8 = 1.024e+09
Nivel 9 = 1.024e+09
Nivel 10 = 1.00768e+09
Nivel 11 = 1.00768e+09
Nivel 12 = 9.43718e+08
Nivel 13 = 8.22084e+08
Nivel 14 = 6.0398e+08

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 189.101s

## #3 g2 n64000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 64000
|=> Altura arvore = 15
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 4.096e+09
Nivel 3 = 4.096e+09
Nivel 4 = 4.096e+09
Nivel 5 = 4.096e+09
Nivel 6 = 4.09601e+09
Nivel 7 = 4.09603e+09
Nivel 8 = 4.09613e+09
Nivel 9 = 4.09659e+09
Nivel 10 = 4.09862e+09
Nivel 11 = 4.04226e+09
Nivel 12 = 4.08106e+09
Nivel 13 = 3.99298e+09
Nivel 14 = 4.22786e+09
Nivel 15 = 6.44245e+09
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
Nivel 15 = 268435456
|=> Tempo total = 5.9654e+10
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 753.016s

## #3 g2 n128000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^2
Com n = 128000
|=> Altura arvore = 16
|=> Trabalho por nivel
Nivel 1 = 1
Nivel 2 = 8
Nivel 3 = 1.6384e+10
Nivel 4 = 1.6384e+10
Nivel 5 = 1.6384e+10
Nivel 6 = 1.6384e+10
Nivel 7 = 1.6384e+10
Nivel 8 = 1.63841e+10
Nivel 9 = 1.63846e+10
Nivel 10 = 1.63866e+10
Nivel 11 = 1.63955e+10
Nivel 12 = 1.61732e+10
Nivel 13 = 1.6341e+10
Nivel 14 = 1.6039e+10
Nivel 15 = 1.71799e+10
Nivel 16 = 2.68435e+10
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
Nivel 10 = 262144
Nivel 11 = 1048576
Nivel 12 = 4194304
Nivel 13 = 16777216
Nivel 14 = 67108864
Nivel 15 = 268435456
Nivel 16 = 1073741824
|=> Tempo total = 2.40048e+11
|=> Trabalho de fn por nivel

Metodo Mestre
T(n) = 4T( (n/2) + n^2
b = 2, a = 4, f(n) = n^2
log de 4 na base 2 = 2
Caso 2 Método Mestre
T(n) = Teta(n^2lgn)

Tempo Execução = 3011.47s

## #3 g3 n50

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 50
|=> Altura arvore = 5
|=> Trabalho por nivel
Nivel 1 = 125001
Nivel 2 = 62508
Nivel 3 = 27696
Nivel 4 = 14080
Nivel 5 = 8192
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
|=> Tempo total = 237477
|=> Trabalho de fn por nivel
Nivel 1 = 125000
Nivel 2 = 62500
Nivel 3 = 27648
Nivel 4 = 13824
Nivel 5 = 6912

Metodo Mestre
T(n) = 4T( (n/2) + n^3
b = 2, a = 4, f(n) = n^3
log de 4 na base 2 = 2
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.01772s

## #3 g3 n100

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 100
|=> Altura arvore = 6
|=> Trabalho por nivel
Nivel 1 = 1e+06
Nivel 2 = 500008
Nivel 3 = 250048
Nivel 4 = 110848
Nivel 5 = 56576
Nivel 6 = 33792
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
|=> Tempo total = 1.95127e+06
|=> Trabalho de fn por nivel
Nivel 1 = 1e+06
Nivel 2 = 500000
Nivel 3 = 250000
Nivel 4 = 110592
Nivel 5 = 55296
Nivel 6 = 27648

Metodo Mestre
T(n) = 4T( (n/2) + n^3
b = 2, a = 4, f(n) = n^3
log de 4 na base 2 = 2
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 0.139647s

## #3 g3 n200

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 200
|=> Altura arvore = 7
|=> Trabalho por nivel
Nivel 1 = 8e+06
Nivel 2 = 4.00001e+06
Nivel 3 = 2.00005e+06
Nivel 4 = 1.00026e+06
Nivel 5 = 443648
Nivel 6 = 227328
Nivel 7 = 139264
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
|=> Tempo total = 1.58106e+07
|=> Trabalho de fn por nivel
Nivel 1 = 8e+06
Nivel 2 = 4e+06
Nivel 3 = 2e+06
Nivel 4 = 1e+06
Nivel 5 = 442368
Nivel 6 = 221184
Nivel 7 = 110592

Metodo Mestre
T(n) = 4T( (n/2) + n^3
b = 2, a = 4, f(n) = n^3
log de 4 na base 2 = 2
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 1.11359s

## #3 g3 n400

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 400
|=> Altura arvore = 8
|=> Trabalho por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 3.2e+07
Nivel 3 = 1.6e+07
Nivel 4 = 8.00026e+06
Nivel 5 = 4.00128e+06
Nivel 6 = 1.77562e+06
Nivel 7 = 913408
Nivel 8 = 573440
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
|=> Tempo total = 1.27264e+08
|=> Trabalho de fn por nivel
Nivel 1 = 6.4e+07
Nivel 2 = 3.2e+07
Nivel 3 = 1.6e+07
Nivel 4 = 8e+06
Nivel 5 = 4e+06
Nivel 6 = 1.76947e+06
Nivel 7 = 884736
Nivel 8 = 442368

Metodo Mestre
T(n) = 4T( (n/2) + n^3
b = 2, a = 4, f(n) = n^3
log de 4 na base 2 = 2
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 8.91546s

## #3 g3 n800

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 800
|=> Altura arvore = 9
|=> Trabalho por nivel
Nivel 1 = 5.12e+08
Nivel 2 = 2.56e+08
Nivel 3 = 1.28e+08
Nivel 4 = 6.40003e+07
Nivel 5 = 3.20013e+07
Nivel 6 = 1.60061e+07
Nivel 7 = 7.10656e+06
Nivel 8 = 3.67002e+06
Nivel 9 = 2.3593e+06
|=> Numero recursoes por nivel
Nivel 1 = 1
Nivel 2 = 4
Nivel 3 = 16
Nivel 4 = 64
Nivel 5 = 256
Nivel 6 = 1024
Nivel 7 = 4096
Nivel 8 = 16384
Nivel 9 = 65536
|=> Tempo total = 1.02114e+09
|=> Trabalho de fn por nivel
Nivel 1 = 5.12e+08
Nivel 2 = 2.56e+08
Nivel 3 = 1.28e+08
Nivel 4 = 6.4e+07
Nivel 5 = 3.2e+07
Nivel 6 = 1.6e+07
Nivel 7 = 7.07789e+06
Nivel 8 = 3.53894e+06
Nivel 9 = 1.76947e+06

Metodo Mestre
T(n) = 4T( (n/2) + n^3
b = 2, a = 4, f(n) = n^3
log de 4 na base 2 = 2
Caso 3 Método Mestre
T(n) = Teta(n^3)

Tempo Execução = 72.9952s

## #3 g3 n1000

T(n) = 4T( (n/2) -0 ) + 0T( (n/1) -0 ) + n^3
Com n = 1000
